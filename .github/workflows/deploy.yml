name: Deploy

on:
  workflow_run:
    workflows: ["Test"]
    types: [completed]
    branches: [main]

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Prepare FlaskBB
        run: |
          flaskbb translations compile

      - name: Build binary distribution
        run: |
          zip -r "flaskbb_deploy-${{github.sha}}.zip" ./flaskbb 
./.ebextensions wsgi.py setup.py setup.cfg requirements.txt flaskbb.cfg 
celery_worker.py

      - name: Upload application artifact
        uses: actions/upload-artifact@v3
        with:
          name: flaskbb_application_artifact
          path: flaskbb_deploy-${{github.sha}}.zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Upload application file to AWS
        run: aws s3 cp flaskbb_deploy-${{github.sha}}.zip s3://flaskbbapp

      - name: Create new application version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name flaskbb \
            --source-bundle 
S3Bucket=flaskbbapp,S3Key="flaskbb_deploy-${{github.sha}}.zip" \
            --version-label "ver-${{ github.sha }}" \
            --description "commit-sha-${{ github.sha }}"

      - name: Deploy application
        run: aws elasticbeanstalk update-environment --environment-name 
flaskbb-environment --version-label "ver-${{ github.sha }}"

